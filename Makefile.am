
TARGET_BIN=nginz_main
TARGET_O=libnginz.o
TARGET_BASIC_O=libnginz_basic.o
#TARGET_HAS_THREAD_O=libnginz_has_thread.o
TARGET_LAR=libnginz.la
TARGET_AR=libnginz.a libnginz_debug.a
bin_PROGRAMS=$(TARGET_BIN) $(TARGET_O) $(TARGET_BASIC_O) $(TARGET_HAS_THREAD_O)
lib_LTLIBRARIES=$(TARGET_LAR)
lib_LIBRARIES=$(TARGET_AR)
NGINZ_SOURCE_FILES = \
src/fiber.c     src/plugin.c	src/plugin_manager.c	src/scanner.c \
src/event_loop.c \
src/binary_coder.c \
src/shake.c	src/shake/help.c \
src/parallel/pipeline.c	src/parallel/fork.c \
src/net/tcp_listener.c src/net/protostack.c \
src/net/chat.c	src/net/chat/welcome.c

pkgincludedir=$(includedir)/nginz@PACKAGE_SUFFIX@
nobase_pkginclude_HEADERS= \
inc/event_loop.h \
inc/fiber.h       inc/plugin.h	inc/plugin_manager.h	inc/scanner.h \
inc/net/chat.h inc/net/chat/welcome.h

NGINZ_INCLUDES=-Iinc
NGINZ_CFLAGS=$(AROOP_CFLAGS)

libnginz_la_SOURCES = $(NGINZ_SOURCE_FILES)
libnginz_la_CPPFLAGS = $(NGINZ_CFLAGS) $(NGINZ_INCLUDES)
#libnginz_static_a_SOURCES = $(NGINZ_SOURCE_FILES)
#libnginz_static_a_CPPFLAGS = $(NGINZ_CFLAGS) $(NGINZ_INCLUDES)
libnginz_debug_a_SOURCES = $(NGINZ_SOURCE_FILES)
libnginz_debug_a_CPPFLAGS = $(NGINZ_CFLAGS) -ggdb3 -DAROOP_OPP_PROFILE -DAROOP_OPP_DEBUG -DMTRACE -DOPP_DEBUG $(NGINZ_INCLUDES) 
#libnginz_debug_a_CPPFLAGS = -ggdb3 -DAROOP_OPP_PROFILE -DAROOP_OPP_DEBUG -DMTRACE $(NGINZ_INCLUDES) 
libnginz_o_SOURCES = $(NGINZ_SOURCE_FILES)
libnginz_o_CPPFLAGS = $(NGINZ_CFLAGS) $(NGINZ_INCLUDES)
libnginz_basic_o_SOURCES = $(NGINZ_SOURCE_FILES)
libnginz_basic_o_CPPFLAGS= $(NGINZ_CFLAGS)-DAROOP_BASIC $(NGINZ_INCLUDES)
#libnginz_has_thread_o_SOURCES = $(NGINZ_SOURCE_FILES)
#libnginz_has_thread_o_CPPFLAGS= $(NGINZ_CFLAGS)-DHAS_THREAD $(NGINZ_INCLUDES)
nginz_main_SOURCES= $(NGINZ_SOURCE_FILES) src/main.c
#nginz_main_CPPFLAGS= $(NGINZ_CFLAGS) -O2 $(NGINZ_INCLUDES)
nginz_main_CPPFLAGS= $(NGINZ_CFLAGS) -ggdb3 -DAROOP_OPP_PROFILE -DAROOP_OPP_DEBUG -DMTRACE -DOPP_DEBUG $(NGINZ_INCLUDES)
#nginz_main_LDFLAGS= $(AROOP_LIBS)
nginz_main_LDFLAGS= $(AROOP_DEBUG_LIBS)


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libnginz@PACKAGE_SUFFIX@.pc

libnginz@PACKAGE_SUFFIX@.pc: libnginz.pc
	cp $< $@

#MAINTAINERCLEANFILES = nginz.pc
